name: Build N1 OpenWrt

on:
  push:
    paths:
      - 'n1/.config'
      - 'n1/diy-part1.sh'
      - 'n1/diy-part2.sh'
  schedule:
    - cron: 0 16 * * *
  workflow_dispatch:
env:
  REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_BRANCH: main
  FEEDS_CONF: n1/feeds.conf.default
  CONFIG_FILE: n1/.config
  DIY_P1_SH: n1/diy-part1.sh
  DIY_P2_SH: n1/diy-part2.sh
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build_openwrt:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Before free disk space
      run: |
        sudo -E apt update -y

    - name: Free Disk Space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android /opt/ghc
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo apt -y autoremove --purge
        sudo apt clean
        sudo -E apt update -y
        sudo apt install -y tree jq tzdata ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential libfuse-dev  bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib   git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev   libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz   mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools   libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip   vim wget xmlto xxd zlib1g-dev
        sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
        sudo timedatectl set-timezone "$TZ"
        df -h

    - name: Clone source code
      run: |
        pwd
        ls
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "tag_name=$(date +%Y%m%d)" >> $GITHUB_ENV
        pwd

    - name: Load custom feeds
      run: |
        pwd
        ls
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: |
        pwd
        ls
        cd openwrt
        ./scripts/feeds update -a

    - name: Install feeds
      run: |
        cd openwrt
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        pwd
        ls package

    - name: Download package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        rm -rf ./build_dir
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Package Armvirt as OpenWrt
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_VERSION_NAME: 6.1.1
        KERNEL_AUTO_LATEST: true
        WHOAMI: king

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@v3
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: |
            ${{ env.FIRMWARE }}
            ${{ env.PACKAGED_OUTPUTPATH }}


    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 1

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
